<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.profit.bond.mapper.BondBuyLogMapper">

  <resultMap type="BondBuyLog" id="BondBuyLogResult">
    <result property="id"    column="id"    />
    <result property="gpId"    column="gp_id"    />
    <result property="price"    column="price"    />
    <result property="count"    column="count"    />
    <result property="totalPrice"    column="total_price"    />
    <result property="backMoney"    column="back_money"    />
    <result property="backTime"    column="back_time"    />
    <result property="interest"    column="interest"    />
    <result property="buyCost"    column="buy_cost"    />
    <result property="cost"    column="cost"    />
    <result property="type"    column="type"    />
    <result property="sellCount"    column="sell_count"    />
    <result property="sellIncome"    column="sell_income"    />
    <result property="buyDate"    column="buy_date"    />
    <result property="status"    column="status"    />
    <result property="operTime"    column="oper_time"    />
    <result property="remarks"    column="remarks"    />
    <result property="financing"    column="financing"    />
    <result property="createTime"    column="create_time"    />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="selectBondBuyLogVo">
    select id, gp_id, price, count, total_price, back_money, back_time, interest, buy_cost, cost, type, sell_count, sell_income, buy_date, status, oper_time, remarks, financing, create_time from bond_buy_log
  </sql>

  <select id="selectByExample" parameterType="com.profit.bond.domain.BondBuyLogExample" resultMap="BondBuyLogResult">
    <include refid="selectBondBuyLogVo" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectBondBuyLogList" parameterType="BondBuyLog" resultMap="BondBuyLogResult">
    <include refid="selectBondBuyLogVo"/>
    <where>
      <if test="gpId != null  and gpId != ''"> and gp_id = #{gpId}</if>
      <if test="price != null "> and price = #{price}</if>
      <if test="count != null "> and count = #{count}</if>
      <if test="totalPrice != null "> and total_price = #{totalPrice}</if>
      <if test="backMoney != null "> and back_money = #{backMoney}</if>
      <if test="backTime != null "> and back_time = #{backTime}</if>
      <if test="interest != null "> and interest = #{interest}</if>
      <if test="buyCost != null "> and buy_cost = #{buyCost}</if>
      <if test="cost != null "> and cost = #{cost}</if>
      <if test="type != null "> and type = #{type}</if>
      <if test="sellCount != null "> and sell_count = #{sellCount}</if>
      <if test="sellIncome != null "> and sell_income = #{sellIncome}</if>
      <if test="buyDate != null  and buyDate != ''"> and buy_date = #{buyDate}</if>
      <if test="status != null "> and status = #{status}</if>
      <if test="operTime != null "> and oper_time = #{operTime}</if>
      <if test="remarks != null  and remarks != ''"> and remarks = #{remarks}</if>
      <if test="financing != null "> and financing = #{financing}</if>
    </where>
  </select>

  <select id="selectBondBuyLogById" parameterType="Long" resultMap="BondBuyLogResult">
    <include refid="selectBondBuyLogVo"/>
    where id = #{id}
  </select>

  <insert id="insertBondBuyLog" parameterType="BondBuyLog" useGeneratedKeys="true" keyProperty="id">
    insert into bond_buy_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gpId != null">gp_id,</if>
      <if test="price != null">price,</if>
      <if test="count != null">count,</if>
      <if test="totalPrice != null">total_price,</if>
      <if test="backMoney != null">back_money,</if>
      <if test="backTime != null">back_time,</if>
      <if test="interest != null">interest,</if>
      <if test="buyCost != null">buy_cost,</if>
      <if test="cost != null">cost,</if>
      <if test="type != null">type,</if>
      <if test="sellCount != null">sell_count,</if>
      <if test="sellIncome != null">sell_income,</if>
      <if test="buyDate != null and buyDate != ''">buy_date,</if>
      <if test="status != null">status,</if>
      <if test="operTime != null">oper_time,</if>
      <if test="remarks != null">remarks,</if>
      <if test="financing != null">financing,</if>
      <if test="createTime != null">create_time,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gpId != null">#{gpId},</if>
      <if test="price != null">#{price},</if>
      <if test="count != null">#{count},</if>
      <if test="totalPrice != null">#{totalPrice},</if>
      <if test="backMoney != null">#{backMoney},</if>
      <if test="backTime != null">#{backTime},</if>
      <if test="interest != null">#{interest},</if>
      <if test="buyCost != null">#{buyCost},</if>
      <if test="cost != null">#{cost},</if>
      <if test="type != null">#{type},</if>
      <if test="sellCount != null">#{sellCount},</if>
      <if test="sellIncome != null">#{sellIncome},</if>
      <if test="buyDate != null and buyDate != ''">#{buyDate},</if>
      <if test="status != null">#{status},</if>
      <if test="operTime != null">#{operTime},</if>
      <if test="remarks != null">#{remarks},</if>
      <if test="financing != null">#{financing},</if>
      <if test="createTime != null">#{createTime},</if>
    </trim>
  </insert>

  <update id="updateBondBuyLog" parameterType="BondBuyLog">
    update bond_buy_log
    <trim prefix="SET" suffixOverrides=",">
      <if test="gpId != null">gp_id = #{gpId},</if>
      <if test="price != null">price = #{price},</if>
      <if test="count != null">count = #{count},</if>
      <if test="totalPrice != null">total_price = #{totalPrice},</if>
      <if test="backMoney != null">back_money = #{backMoney},</if>
      <if test="backTime != null">back_time = #{backTime},</if>
      <if test="interest != null">interest = #{interest},</if>
      <if test="buyCost != null">buy_cost = #{buyCost},</if>
      <if test="cost != null">cost = #{cost},</if>
      <if test="type != null">type = #{type},</if>
      <if test="sellCount != null">sell_count = #{sellCount},</if>
      <if test="sellIncome != null">sell_income = #{sellIncome},</if>
      <if test="buyDate != null and buyDate != ''">buy_date = #{buyDate},</if>
      <if test="status != null">status = #{status},</if>
      <if test="operTime != null">oper_time = #{operTime},</if>
      <if test="remarks != null">remarks = #{remarks},</if>
      <if test="financing != null">financing = #{financing},</if>
      <if test="createTime != null">create_time = #{createTime},</if>
    </trim>
    where id = #{id}
  </update>

  <delete id="deleteBondBuyLogById" parameterType="Long">
    delete from bond_buy_log where id = #{id}
  </delete>

  <delete id="deleteBondBuyLogByIds" parameterType="String">
    delete from bond_buy_log where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <select id="sumSellIncome" resultType="java.lang.Double">
    SELECT
    sum(sell_income)
    FROM
    bond_buy_log
    WHERE
    gp_id = #{gp_id,jdbcType=VARCHAR}
    AND
    type = #{type,jdbcType=TINYINT}
    AND
    status in(0,1)
  </select>

  <select id="sumLossIncome" resultType="java.lang.Double">
    SELECT
    sum(sell_income)
    FROM
    bond_buy_log
    WHERE
    <![CDATA[sell_income < 0]]>
    AND
    status in(0,1)
  </select>


  <select id="sumCost" resultType="java.lang.Double">
    SELECT
    sum(cost)
    FROM
    bond_buy_log
    WHERE
    status in(0,1)
  </select>

  <select id="sumBuySellCount" resultType="map">
    SELECT
    SUM(COUNT) AS buyCount ,SUM(sell_count) AS sellCount
    FROM
    bond_buy_log
    WHERE gp_id = #{gp_id,jdbcType=VARCHAR}
    AND
    type = #{type,jdbcType=TINYINT}
    AND
    status in(0,1)
  </select>

  <select id="sumInterest" resultType="java.lang.Double">
    SELECT
    sum(interest)
    FROM
    bond_buy_log
  </select>

</mapper>